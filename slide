-- Основные переменные
local player = game.Players.LocalPlayer
local UIS = game:GetService("UserInputService")

-- Функция для обработки слайда
local function setupSlide(char)
    local Humanoid = char:WaitForChild("Humanoid")
    local Animator = Humanoid:WaitForChild("Animator")
    
    -- Настройка анимации слайда
    local slideAnimation = Instance.new("Animation")
    slideAnimation.AnimationId = "rbxassetid://77296183648593"
    local slideTrack = Animator:LoadAnimation(slideAnimation)

    -- Отключение стандартного скрипта слайда
    local function disableSlideScript()
        local slideScript = char:FindFirstChild("Slide", true)
        if slideScript and slideScript:IsA("LocalScript") then
            slideScript.Enabled = false
        end
    end
    
    disableSlideScript()
    
    -- Обработчик слайда
    UIS.InputBegan:Connect(function(input, processed)
        if processed or input.KeyCode ~= Enum.KeyCode.C or not char:FindFirstChild("HumanoidRootPart") then return end
        
        slideTrack:Play()
        
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(50000, 0, 50000)
        
        if Humanoid:GetState() == Enum.HumanoidStateType.Climbing then
            bodyVelocity.MaxForce = Vector3.new(50000, 50000, 50000)
            bodyVelocity.Velocity = char.HumanoidRootPart.CFrame.LookVector * 100 + Vector3.new(0, 345, 0)
        else
            bodyVelocity.Velocity = char.HumanoidRootPart.CFrame.LookVector * 100
        end
        
        bodyVelocity.Parent = char.HumanoidRootPart

        for _ = 1, 8 do
            task.wait(0.1)
            bodyVelocity.Velocity *= 0.7
        end
        
        bodyVelocity:Destroy()
        slideTrack:Stop()
    end)
end

-- Инициализация для текущего персонажа
local Character = player.Character or player.CharacterAdded:Wait()
setupSlide(Character)

-- Обработчик пересоздания персонажа
player.CharacterAdded:Connect(function(newCharacter)
    setupSlide(newCharacter)
end)

-- Создание кнопки в верхнем правом углу
local TweenService = game:GetService("TweenService")
local gui = Instance.new("ScreenGui")
gui.Name = "SlideButtonUI"
gui.Parent = player:WaitForChild("PlayerGui")
gui.ResetOnSpawn = false

local button = Instance.new("TextButton")
button.Name = "SlideButton"
button.Size = UDim2.new(0, 60, 0, 60)
button.Position = UDim2.new(1, -70, 0, 10) -- Верхний правый угол
button.AnchorPoint = Vector2.new(1, 0)
button.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
button.BackgroundTransparency = 0.2
button.Text = "Slide"
button.TextColor3 = Color3.fromRGB(255, 255, 255)
button.Font = Enum.Font.GothamBold
button.TextSize = 18
button.Parent = gui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = button

-- Анимация клика
local function animateClick()
    local tween = TweenService:Create(
        button,
        TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        { BackgroundTransparency = 0.4 }
    )
    tween:Play()
    tween.Completed:Wait()
    TweenService:Create(
        button,
        TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        { BackgroundTransparency = 0.2 }
    ):Play()
end

-- Обработчик нажатия кнопки
button.MouseButton1Click:Connect(function()
    animateClick()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.C, false, game)
    task.delay(0.1, function()
        game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.C, false, game)
    end)
end)
